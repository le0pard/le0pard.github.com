---
layout: post
title: Заходим по SSH без паролей
wordpress_id: 598
wordpress_url: http://leopard.in.ua/?p=598
---
На работе приходится работать с несколькими серверами используя ssh. Некоторые неудобства доставляет то, что часто надо подключаться и вводить пароль. В принципе, можно держать открытыми несколько терминалов и проблема отпадет. Но для каких-то автоматических заданий так не особо удобно. Поэтому было найден более удобный способ :).Сначала ставим на сервере ssh сервер (пример для Debian, Ubuntu)<pre lang="bash">sudo apt-get install openssh-server</pre>Теперь ssh установлен и запущен на 22-м порту и мы можем подключиться к нему по обычной схеме логин/пароль.Но у нас задача сделать доступ по ключам.Рассмотрим случаи для Линукса и Винды.<!--more-->**1) Подключаемся к ssh с помощью другой linux системы**Сначала на пользовательском компьютере создадим ключи. Для этого выполним<pre lang="bash">ssh-keygen -t rsa</pre>Он спросит куда их сохранять. соглашаемся на предложенный путь(он по умолчанию ~/.ssh)потом он спросит пароль. т.к. он нам не нужен просто нажимает два раза enter (хотя можно и задать пароль для ключа, тогда при логинке по ключу будет спрашивать пароль ключа).Теперь заходим на сервер и создаем папку .ssh в директории нужного пользователя(если её там нет),а в этой папке создаем файл **authorized_keys** и добавляем в него строчку из нашего созданного файла ключей: **id_rsa.pub**Тут обращу внимание на частую ошибку: файл authorized_keys строится по принципу 1 строчка - 1 ключ!!!Все. Теперь можно логиниться без пароля (за это и люблю Линкус - все просто).**2)** **Подключаемся к ssh с помощью windows системы**Прежде всего мы должны установить PuTTY, PuTTYgen и Pageant в нашей системе Windows. Всё, что мы должны сделать, это скачать установочный файл (_.exe_) со [страницы загрузки PuTTY](http://altware.ru/soft/putty) и запустить его. В качестве папки, куда будет установлена программа, можно указать, например, "C:\putty". Чтобы запустить инсталлированные приложения, их достаточно дважды кликнуть.![putty01](http://leopard.in.ua/wp-content/uploads/2008/12/putty01.png "putty01")Мы можем использовать PuTTYgen для изготовления пары закрытого и открытого ключей. Запустите генератор двойным кликом на исполняемом файле. Убедитесь, что Вы выбрали _SSH-2 RSA_ под _Type of key to generate:_ (Тип генерируемого ключа) и ввели _2048_ в _Number of bits in a generated key_ (Число бит в генерируемом ключе).  Затем кликните на _Generate_:![putty08](http://leopard.in.ua/wp-content/uploads/2008/12/putty08.png "putty08")![putty09](http://leopard.in.ua/wp-content/uploads/2008/12/putty09.png "putty09")Теперь пара закрытого и открытого ключей сгенерирована. Под _Key comment:_ Вы можете ввести комментарий (обычно здесь пишут свой e-mail адрес). Затем вписывают _Key passphrase_ (парольная фраза) и повторяют её под _Confirm passphrase:_. Вам понадобится эта парольная фраза для подсоединения к SSH с Вашим новым ключём. Затем кликните _Save public key_ (Сохранить открытый ключ) и сохраните его в безопасном месте на Вашем компьютере. Вы вольны выбрать любое имя и расширение, но оно должно быть таким, чтобы вы помнили, к какой системе этот ключ.![putty10](http://leopard.in.ua/wp-content/uploads/2008/12/putty10.png "putty10")Затем кликните на _Save private key_ (Сохранить закрытый ключ). Вы можете сохранить его там же, где и открытый ключ, только Вы должны иметь к нему доступ, позаботьтесь о его сохранности! (Если вы утеряете ключи и отмените подключение по способу имя/пароль, Вы будете более неспособны подключиться!). Вы так же свободны в выборе имени файла, но на этот раз расширение будет _.ppk._Затем скопируйте открытый ключ из окна PuTTYgen:![putty14](http://leopard.in.ua/wp-content/uploads/2008/12/putty14.png "putty14")Соединитесь с Вашим SSH сервером, пока ещё с помощью имени и пароля, и вставьте открытый ключ в файл ~/.ssh/authorized_keys (в одну линию!) примерно вот так:<pre lang="bash"> mkdir ~/.ssh chmod 700 ~/.ssh</pre><pre lang="bash"> vi ~/.ssh/authorized_keys</pre><pre lang="bash">AAAAB3NzaC1kc3MAAAE [. . .] Huw2FekFNM7pMgEQi57k= dsa-key-20061205</pre>Данный файл должен читаться/правиться только данным пользователем, поэтому мы запускаем:<pre lang="bash">chmod 600 ~/.ssh/authorized_keys</pre>Теперь запустите PuTTY и загрузите профиль Вашего SSH сервера. Затем идите в категорию SSH, далее Auth и кликайте Browse:![putty16](http://leopard.in.ua/wp-content/uploads/2008/12/putty16.png "putty16")Найдите в вашей системе и выберите созданный ранее закрытый ключ. Затем снова идите в категорию _Session_ и кликайте на _Save_.Вот и все!**<span style="font-size: medium;">ЗЫ</span>****Отключение парольной идентификации**Теперь можно подсоединиться к серверу, используя пару ключей (открытый/закрытый), и всё ещё есть возможность соединения с помощью имени и пароля, поэтому, если не прикрепить закрытый ключ к своей сессии PuTTY, будет предложено ввести имя и пароль. Поэтому, для достижения большей защищённости, мы должны отключить возможность соединения _имя/пароль_. (Вы должны сделать это только когда полностью уверены, что подключение с помощью ключа работает, в противном случае у Вас будут проблемы...)Для отключения возможности соединения через имя/пароль, мы должны внести изменения в конфигурационный файл sshd. В системах Debian/Ubuntu это **/etc/ssh/sshd_config**. Вы должны выбрать **Protokol 2** (1 ненадёжен и не должен использоваться!), **PasswordAuthentication** установить в **no**, и для **UsePAM** также выбрать **no** (или закомментировать строку UsePAM), например, так:<pre lang="bash">vi /etc/ssh/sshd_config</pre><pre lang="bash"> [...] Protocol 2 PasswordAuthentication no UsePAM no [...]</pre>Затем перезапустите sshd. В Debian/Ubuntu это можно сделать так:<pre lang="bash">/etc/init.d/ssh restart</pre>Теперь, если Вы откроете сессию SSH без присоединённого закрытого ключа, Вы больше не способны будете соединиться.
